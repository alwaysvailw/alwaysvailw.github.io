<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wei&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.dev4wei.cn/"/>
  <updated>2019-09-12T03:01:30.714Z</updated>
  <id>http://blog.dev4wei.cn/</id>
  
  <author>
    <name>Wei Wei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>对接口设计的一些看法</title>
    <link href="http://blog.dev4wei.cn/%E5%AF%B9%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9C%8B%E6%B3%95/"/>
    <id>http://blog.dev4wei.cn/对接口设计的一些看法/</id>
    <published>2019-09-12T02:54:26.000Z</published>
    <updated>2019-09-12T03:01:30.714Z</updated>
    
    <content type="html"><![CDATA[<p>设计阶段，前后端开发人员必须要经过充分协商，定义接口的基本格式，以及常用的错误处理流程</p><p><a href="https://github.com/ZhangBohan/http-api-design-ZH_CN" target="_blank" rel="noopener">HTTP API 设计指南</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;设计阶段，前后端开发人员必须要经过充分协商，定义接口的基本格式，以及常用的错误处理流程&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ZhangBohan/http-api-design-ZH_CN&quot; target=&quot;_blank&quot; rel=&quot;noo
      
    
    </summary>
    
      <category term="工作" scheme="http://blog.dev4wei.cn/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
      <category term="开发" scheme="http://blog.dev4wei.cn/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>基于CentOS搭建FTP文件服务.md</title>
    <link href="http://blog.dev4wei.cn/%E5%9F%BA%E4%BA%8ECentOS%E6%90%AD%E5%BB%BAFTP%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1/"/>
    <id>http://blog.dev4wei.cn/基于CentOS搭建FTP文件服务/</id>
    <published>2019-04-06T20:03:04.000Z</published>
    <updated>2019-04-06T20:09:42.105Z</updated>
    
    <content type="html"><![CDATA[<p>腾讯云实验室</p><p><a href="https://cloud.tencent.com/developer/labs/lab/10002#stage-2-step-3-user" target="_blank" rel="noopener">基于 CentOS 搭建 FTP 文件服务</a></p><h2 id="安装并启动-FTP-服务"><a href="#安装并启动-FTP-服务" class="headerlink" title="安装并启动 FTP 服务"></a>安装并启动 FTP 服务</h2><p>安装 VSFTPD</p><p>vsftpd是 “very secure FTP deamon”的缩写，是一个完全免费，开源的ftp服务器软件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install vsftpd -y</span><br></pre></td></tr></table></figure><p>启动 VSFTPD<br>安装完成后，启动 FTP 服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service vsftpd start</span><br></pre></td></tr></table></figure><p>启动后，可以看到系统已经[监听了 21 端口]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nltp | grep 21</span><br></pre></td></tr></table></figure><p>此时，访问 ftp://&lt;您的 CVM IP 地址&gt; 可浏览机器上的 /var/ftp 目录了。</p><h2 id="配置-FTP-权限"><a href="#配置-FTP-权限" class="headerlink" title="配置 FTP 权限"></a>配置 FTP 权限</h2><p>目前 FTP 服务登陆允许匿名登陆，也无法区分用户访问，我们需要配置 FTP 访问权限</p><p>了解 VSFTP 配置</p><p>vsftpd 的配置目录为 /etc/vsftpd，包含下列的配置文件：</p><p>vsftpd.conf 为主要配置文件</p><p>ftpusers 配置禁止访问 FTP 服务器的用户列表</p><p>user_list 配置用户访问控制</p><p>阅读上述配置以了解更多信息。如果您准备好了，点击下一步开始修改配置来设置权限。</p><p>阻止匿名访问和切换根目录</p><p>匿名访问和切换根目录都会给服务器带来[安全风险]，我们把这两个功能关闭。</p><p>编辑 /etc/vsftpd/vsftpd.conf，[找到下面两处配置]并修改：</p><h3 id="禁用匿名用户"><a href="#禁用匿名用户" class="headerlink" title="禁用匿名用户"></a>禁用匿名用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=NO</span><br></pre></td></tr></table></figure><h3 id="禁止切换根目录"><a href="#禁止切换根目录" class="headerlink" title="禁止切换根目录"></a>禁止切换根目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chroot_local_user=YES</span><br></pre></td></tr></table></figure><p>编辑完成后，按 Ctrl + S 保存配置，重新启动 FTP 服务，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service vsftpd restart</span><br></pre></td></tr></table></figure><p>匿名访问让所有人都可以上传文件到服务器上而无需鉴权，而允许切换根目录则可能产生越权访问问题。</p><p>在代码编辑器中，用 Ctrl + F 进行搜索，Mac 用户用 Cmd + F 进行搜索</p><p>创建 FTP 用户</p><p>创建一个用户 ftpuser [?]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd ftpuser</span><br></pre></td></tr></table></figure><p>为用户 ftpuser 设置密码 [?]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;Password&quot; | passwd ftpuser --stdin</span><br></pre></td></tr></table></figure><p>为了方便后面的实验步骤，不建议使用其它的用户名</p><p>下面命令中的密码为实验室为您生成，为了方便后面的实验步骤，不建议使用其他密码</p><p>限制该用户仅能通过 FTP 访问</p><p>限制用户 ftpuser 只能通过 FTP</p><p>访问服务器，而不能直接登录服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -s /sbin/nologin ftpuser</span><br></pre></td></tr></table></figure><p>为用户分配主目录</p><p>为用户 ftpuser 创建[主目录]并约定：</p><p>/data/ftp 为主目录, 该目录不可上传文件</p><p>/data/ftp/pub 文件只能上传到该目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/ftp/pub</span><br></pre></td></tr></table></figure><p>创建登录欢迎文件 [?]：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;Welcome to use FTP service.&quot; &gt; /data/ftp/welcome.txt</span><br></pre></td></tr></table></figure><p>设置访问权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a-w /data/ftp &amp;&amp; chmod 777 -R /data/ftp/pub</span><br></pre></td></tr></table></figure><p>设置为用户的主目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -d /data/ftp ftpuser</span><br></pre></td></tr></table></figure><p>用户的主目录是用户通过 FTP 登录后看到的根目录</p><p>方便用户登录后可以看到欢迎信息，并且确定用户确实登录到了主目录上。</p><p>访问 FTP 服务</p><p>任务时间：5min ~ 10min</p><p>FTP 服务已安装并配置完成，下面我们来使用该 FTP 服务</p><p>访问 FTP 服务</p><p>根据您个人的工作环境，选择一种方式来访问已经搭建的 FTP 服务</p><p>通过 Windows 资源管理器访问</p><p>Windows 用户可以复制下面的[链接]到资源管理器的地址栏访问：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp://ftpuser:Password@&lt;您的 CVM IP 地址&gt;</span><br></pre></td></tr></table></figure><p>通过 FTP 客户端工具访问<br>FTP 客户端工具众多，下面推荐两个常用的：</p><p>WinSCP - Windows 下的 FTP 和 SFTP 连接客户端</p><p>FileZilla - 跨平台的 FTP 客户端，支持 Windows 和 Mac</p><p>下载和安装 FTP 客户端后，使用下面的凭据进行连接即可：</p><p>[主机]：</p><p>&lt;您的 CVM IP 地址&gt;</p><p>用户：</p><p>ftpuser</p><p>密码：</p><p>Password</p><p>如果能够正常连接，那么大功告成，您可以开始使用属于您自己的 FTP 服务器了！</p><p>接下来，请上传任意一张图片到您的 FTP 服务器上的pub目录下，然后，就可以在 /data/ftp/pub 中看到了。</p><p>注意: 请不要直接上传文件到根目录下，您应该选择上传到 pub 目录下</p><p>如果您申请了域名，可以将链接中的 Ip 地址替换为对应的域名访问 FTP 服务</p><p>如果您申请了域名，可以将Ip 地址替换为对应的域名作为访问凭据</p><p>大功告成<br>恭喜！您已经成功完成了搭建 FTP 服务器的实验任务。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;腾讯云实验室&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/labs/lab/10002#stage-2-step-3-user&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;基于 CentOS 搭
      
    
    </summary>
    
      <category term="教程" scheme="http://blog.dev4wei.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="Centos" scheme="http://blog.dev4wei.cn/categories/%E6%95%99%E7%A8%8B/Centos/"/>
    
    
      <category term="Centos" scheme="http://blog.dev4wei.cn/tags/Centos/"/>
    
      <category term="FTP" scheme="http://blog.dev4wei.cn/tags/FTP/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Next+GitHub搭建博客</title>
    <link href="http://blog.dev4wei.cn/Hexo-Next-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://blog.dev4wei.cn/Hexo-Next-GitHub搭建博客/</id>
    <published>2019-04-03T08:39:41.000Z</published>
    <updated>2019-04-06T20:09:46.566Z</updated>
    
    <content type="html"><![CDATA[<p>毕业大半年了，虽然工作的事情挺多的，但是吧，感觉知识面太窄了，需要用到的一些技术基本上也掌握了，还是得用闲暇时间提升一下自己。这两天买了个云服务器自己玩，本来想搭个Wordpress的博客（都已经搭好了），偶然间看到这个Hexo框架，感觉不错，一方面框架基于Node.js，有什么问题也能去看看代码，或者弄点自定义；另一方面也是写的博客还是想存放在本地，然后用GitHub同步保存。<br><a id="more"></a><br>写博客嘛，也是给自己多点动力，也能有个平台来给自己消化、记录，别到以后用到一样的东西的时候，忘了，忘了也就算了，又花一堆时间来找资料就真的太划不来了。emmm，第一篇也就是搭建这个基于Hexo+Next+GitHub的博客啦！</p><h2 id="附上网址"><a href="#附上网址" class="headerlink" title="附上网址"></a>附上网址</h2><h3 id="Hexo-https-hexo-io-zh-cn"><a href="#Hexo-https-hexo-io-zh-cn" class="headerlink" title="Hexo https://hexo.io/zh-cn/"></a>Hexo <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a></h3><h3 id="Next-https-theme-next-org"><a href="#Next-https-theme-next-org" class="headerlink" title="Next https://theme-next.org"></a>Next <a href="https://theme-next.org" target="_blank" rel="noopener">https://theme-next.org</a></h3><h3 id="Github-https-github-com"><a href="#Github-https-github-com" class="headerlink" title="Github https://github.com/"></a>Github <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></h3><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">hexo史上最全搭建教程</a></p><p><a href="https://www.jianshu.com/p/8b5ace009307" target="_blank" rel="noopener">搭建Hexo博客相册</a><br><!-- more --></p><p>以下内容就是记着给自己回忆了，会记录一些碰到的问题，干货直接看上方的参考。</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>建议看参考，该教程会省略一些基本的操作，比如GitHub的使用等。</p><p>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：</p><ul><li>Node.js</li><li>Git</li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>GitHub创建个人仓库，命名username.github.io。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate(hexo g)</span><br><span class="line">hexo deploy(hexo d)</span><br></pre></td></tr></table></figure><p>域名先设置解析，然后登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入域名<a href="dev4wei.cn">dev4wei.cn</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes / next</span><br></pre></td></tr></table></figure><p>具体的配置就看Hexo和Next的文档了。</p><h2 id="一些问题的记录"><a href="#一些问题的记录" class="headerlink" title="一些问题的记录"></a>一些问题的记录</h2><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>git clone命令后会产生.git文件，导致GitHub同步的时候部分源代码上传不了。我的想法是在每台机器上可以直接用GitHub进行同步，源代码缺失会很麻烦，每次得手动去做git clone操作。</p><p>那就记录一些有关于git的操作。</p><p>删除.git文件夹。</p><p>有可能还是找不到文件夹，那就清空缓存。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm -rf --cached [./]filename</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: pathspec &apos;[filename]&apos; did not match any files//报错</span><br></pre></td></tr></table></figure><p>原因：没有文件，或者是文件夹被.gitnore屏蔽了，修改.gitnore文件，删掉相关配置。</p><p>查看当前的远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>修改为想要设置的远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin https://where you want to put your repository to.git</span><br></pre></td></tr></table></figure><p>版本回退</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard commit_id</span><br></pre></td></tr></table></figure><h3 id="相册"><a href="#相册" class="headerlink" title="相册"></a>相册</h3><p>第一次搭没有成功，而且第一个人的教程写的有点乱，又看了几个人的教程，目前上面贴的这个教程，还是不错的，就搭起来了。值得注意的是，所需文件的引入位置，和代码中的URL一定要按照自己的项目目录来配置。</p><p>第二次搭的时候在index.md文件中的<script>标签里的URL卡了很久，因为没发现这里面也引入了css文件。emmm，这个教程貌似也没贴这个，知道是css文件没有引入成功，一直在ins.js里面找，后来才发现是index.md文件中引入的。</p></script></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;毕业大半年了，虽然工作的事情挺多的，但是吧，感觉知识面太窄了，需要用到的一些技术基本上也掌握了，还是得用闲暇时间提升一下自己。这两天买了个云服务器自己玩，本来想搭个Wordpress的博客（都已经搭好了），偶然间看到这个Hexo框架，感觉不错，一方面框架基于Node.js，有什么问题也能去看看代码，或者弄点自定义；另一方面也是写的博客还是想存放在本地，然后用GitHub同步保存。&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="http://blog.dev4wei.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo" scheme="http://blog.dev4wei.cn/tags/Hexo/"/>
    
      <category term="Next" scheme="http://blog.dev4wei.cn/tags/Next/"/>
    
      <category term="GitHub" scheme="http://blog.dev4wei.cn/tags/GitHub/"/>
    
  </entry>
  
</feed>
